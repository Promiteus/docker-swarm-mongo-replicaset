version: "3"
services:
  # Веб-визуализатор расположения сервисов по узлам
  viz:
    image: dockersamples/visualizer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      placement:
        constraints: [ node.role == manager ]


  # Менеджер управления mongodb
  mongoexpress:
    image: mongo-express:0.54.0
    ports:
      - "8081:8081"
    networks:
      - mongo-net
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://rep_mongo1:27017
      ME_CONFIG_BASICAUTH_USERNAME: su
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
      update_config:
        parallelism: 1
      placement:
        constraints: [ node.role == manager ]


  mongo1:
    image: mongo:4.4
    command: "mongod --oplogSize 128 --replSet rs1"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./scripts/db/init-user.sh:/etc/init-user.sh
      - ./scripts/db/commands:/etc/commands
      - ./scripts/db/init-user.sh:/docker-entrypoint-initdb.d/init-user.sh
      - mongo-data-1:/data/db
      - mongo-config-1:/data/configdb
    networks:
      - mongo-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 1

  mongo2:
    image: mongo:4.4
    command: "mongod --oplogSize 128 --replSet rs1"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo-data-2:/data/db
      - mongo-config-2:/data/configdb
    networks:
      - mongo-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 2

  mongo3:
    image: mongo:4.4
    command: "mongod --oplogSize 128 --replSet rs1"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo-data-3:/data/db
      - mongo-config-3:/data/configdb
    networks:
      - mongo-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 3

networks:
  mongo-net:
    external: true


volumes:
  mongo-data-1:
  mongo-data-2:
  mongo-data-3:
  mongo-config-1:
  mongo-config-2:
  mongo-config-3: